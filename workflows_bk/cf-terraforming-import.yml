name: "Cf-terraforming Import"

on:
  push:

defaults:
  run:
    shell: bash

env:
  CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
  ZONE_IDS: '{"lee-site": "8f0b8c4abfb8b870fce5c65aa7c3f0d7"}'

jobs:
  cf-terraforming-generate:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      - name: download-cf-terraforming
        run: |
          if [ ! -e "/${{ github.workspace }}/cf-terraforming" ]; then
              echo "cf-terraforming file does not exist."
              gz_file="cf-terraforming.tar.gz"
              curl -L https://github.com/cloudflare/cf-terraforming/releases/download/v0.20.0/cf-terraforming_0.20.0_linux_amd64.tar.gz -o ${{ github.workspace }}/$gz_file
              tar -xzvf ${{ github.workspace }}/$gz_file -C ${{ github.workspace }}
              rm ${{ github.workspace }}/$gz_file
              chmod +x cf-terraforming
          else
              echo "File cf-terraforming already exists."
          fi

      - name: Terraform Init
        run: |
          terraform fmt -check && terraform init && terraform validate

      - name: Cf-terraforming Import
        env:
          CLOUDFLARE_TOKEN: ${{ env.CLOUDFLARE_TOKEN }}
          ZONE_IDS: ${{ env.ZONE_IDS }}
          CI : false
        run: |        
          echo "$ZONE_IDS" | jq -r 'to_entries[] | "\(.key)|\(.value)"' | while IFS='|' read -r key value; do
            ./cf-terraforming import -t $CLOUDFLARE_TOKEN -z $value --resource-type cloudflare_ruleset --modern-import-block > imported_cmd_$key.txt
          done

      - uses: actions/upload-artifact@v4
        with:
          name: import_cmd
          path: imported_cmd_*.txt

      # Delete all existing files as we re-use the same runner
      - name: Delete all files
        run: |
          rm -rf ${{ github.workspace }}/*